[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# [[plugins]]
# repo = 'ryanoasis/vim-devicons'
# hook_add = '''
#
#   autocmd FileType nerdtree setlocal nolist
#   " vim-devicons
#   let g:webdevicons_enable = 1
#   let g:webdevicons_enable_nerdtree = 1
#
#   let g:webdevicons_conceal_nerdtree_brackets = 1
#   let g:WebDevIconsUnicodeGlyphDoubleWidth = 0
#   let g:WebDevIconsNerdTreeAfterGlyphPadding = '  '
#
#   " dir-icons
#   " let g:WebDevIconsUnicodeDecorateFolderNodes = 1
#   " let g:DevIconsEnableFoldersOpenClose = 1
#   " let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''
#   " let g:DevIconsDefaultFolderOpenSymbol = ''
#
#   " file-icons
#   let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}
#   let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['html'] = ''
#   let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['css'] = ''
#   let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['md'] = ''
#   let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['txt'] = ''
# '''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent> <Space>f :<C-u>NERDTree<CR>
  nnoremap <silent> <Space>c :<C-u>NERDTreeClose<CR>

  let g:NERDTreeQuitOnOpen=0
'''

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
  nnoremap <silent> <C-i> :<C-u>CtrlPBuffer<CR>
  let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
'''

# [[plugins]]
# repo = 'LeafCage/yankround.vim'
# depends = ['ctrlp.vim']
# hook_add = '''
#   nmap p <Plug>(yankround-p)
#   xmap p <Plug>(yankround-p)
#   nmap P <Plug>(yankround-P)
#   nmap gp <Plug>(yankround-gp)
#   xmap gp <Plug>(yankround-gp)
#   nmap gP <Plug>(yankround-gP)
#   nmap <C-n> <Plug>(yankround-next)
#
#   let g:ctrlp_map = ''
#   nnoremap <silent><SID>(ctrlp) :<C-u>CtrlP<CR>
#   nmap <expr><C-p> yankround#is_active() ? "\<Plug>(yankround-prev)" : "<SID>(ctrlp)"
# '''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
  let g:NERDTreeFileExtensionHighlightFullName = 1
  let g:NERDTreeExactMatchHighlightFullName = 1
  let g:NERDTreePatternMatchHighlightFullName = 1
'''

# depends unite {{{
[[plugins]]
repo = 'thinca/vim-unite-history'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-filetype'

[[plugins]]
repo = 'Shougo/unite-help'
on_source = 'unite.vim'
# }}}

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'haya14busa/vim-migemo'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'daisuzu/translategoogle.vim'

# color {{{
[[plugins]]
repo = 'keith/tmux.vim'

[[plugins]]
repo = 'elubow/cql-vim'
# }}}

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'ap/vim-buftabline'
hook_add = '''
  let g:buftabline_numbers = 1
  let g:buftabline_separators = 1
  nmap ,1 <Plug>BufTabLine.Go(1)
  nmap ,2 <Plug>BufTabLine.Go(2)
  nmap ,3 <Plug>BufTabLine.Go(3)
  nmap ,4 <Plug>BufTabLine.Go(4)
  nmap ,5 <Plug>BufTabLine.Go(5)
  nmap ,6 <Plug>BufTabLine.Go(6)
  nmap ,7 <Plug>BufTabLine.Go(7)
  nmap ,8 <Plug>BufTabLine.Go(8)
  nmap ,9 <Plug>BufTabLine.Go(9)
  nmap ,0 <Plug>BufTabLine.Go(10)
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_post_source = 'source ~/.vim/rc/plugins/lightline.rc.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'kana/vim-smartinput'
hook_post_source = 'source ~/.vim/rc/plugins/smartinput.rc.vim'

[[plugins]]
repo = 'vim-scripts/Align'
hook_add ='''
  let g:Align_xstrlen = 3
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'thinca/vim-template'
hook_add = '''
  autocmd MyAutoCmd User plugin-template-loaded call s:template_keywords()
  function! s:template_keywords()
    silent! %s/<+DATE+>/\=strftime('%Y-%m-%d')/g
    silent! %s/<+FILENAME+>/\=expand('%:r')/g
  endfunction

  autocmd MyAutoCmd User plugin-template-loaded
        \   if search('<+CURSOR+>')
        \ |   silent! execute 'normal! "_da>'
        \ | endif
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  source ~/.vim/rc/plugins/quickrun.rc.vim
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

# [[plugins]]
# repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'glidenote/memolist.vim'
hook_add ='''
  let g:memolist_path = "~/Documents/Memo"
  let g:memolist_memo_suffix = "md"
  let g:memolist_memo_date = "%Y-%m-%d %H:%M"
  let g:memolist_memo_date = "epoch"
  let g:memolist_memo_date = "%D %T"
  let g:memolist_prompt_tags = 1
  let g:memolist_prompt_categories = 1
  let g:memolist_qfixgrep = 1
  let g:memolist_ex_cmd = "NERDTree"
  let g:memolist_template_dir_path = "~/.vim/template/memolist"

  map <Space>mn  :MemoNew<CR>
  map <Space>ml  :MemoList<CR>
  map <Space>mg  :MemoGrep<CR>
'''

[[plugins]]
repo = 'fuenor/qfixgrep'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  " let g:gitgutter_sign_added = '+'
  " let g:gitgutter_sign_modified = '>'
  " let g:gitgutter_sign_removed = '-'
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
  nnoremap <silent> <Space>2 :<C-u>TagbarToggle<CR>
  let g:tagbar_autofocus = 1
  let g:tagbar_type_go = {
      \ 'ctagstype' : 'go',
      \ 'kinds'     : [
          \ 'p:package',
          \ 'i:imports:1',
          \ 'c:constants',
          \ 'v:variables',
          \ 't:types',
          \ 'n:interfaces',
          \ 'w:fields',
          \ 'e:embedded',
          \ 'm:methods',
          \ 'r:constructor',
          \ 'f:functions'
      \ ],
      \ 'sro' : '.',
      \ 'kind2scope' : {
          \ 't' : 'ctype',
          \ 'n' : 'ntype'
      \ },
      \ 'scope2kind' : {
          \ 'ctype' : 't',
          \ 'ntype' : 'n'
      \ },
      \ 'ctagsbin'  : 'gotags',
      \ 'ctagsargs' : '-sort -silent'
  \ }
'''

# [[plugins]]
# repo = 'soramugi/auto-ctags.vim'
# hook_add = '''
#   let g:auto_ctags = 1
#   let g:auto_ctags_tags_args = '--tag-relative --recurse'
#   let g:auto_ctags_directory_list = ['.git', '.svn', '$HOME/.ctags.d']
#   let g:auto_ctags_filetype_mode = 1
#   set tags+=.git/tags
#   set tags+=.svn/tags
#   set tags+=$HOME/.ctags.d/tags
# '''

[[plugins]]
repo = 'Shougo/vinarise'

[[plugins]]
repo = 'osyo-manga/vim-over'
hook_add = '''
  map <silent> ,c :OverCommandLine<CR>
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
hook_add = '''
  map *  <Plug>(asterisk-z*)
  map #  <Plug>(asterisk-z#)
  map g* <Plug>(asterisk-gz*)
  map g# <Plug>(asterisk-gz#)

  let g:asterisk#keeppos = 1
'''

[[plugins]]
repo = 'haya14busa/vim-edgemotion'
hook_add = '''
  map <C-j> <Plug>(edgemotion-j)
  map <C-k> <Plug>(edgemotion-k)
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  nmap s <Plug>(easymotion-overwin-f2)

  map <Space>L <Plug>(easymotion-bd-jk)
  nmap <Space>L <Plug>(easymotion-overwin-line)

  map  / <Plug>(easymotion-sn)
  omap / <Plug>(easymotion-tn)

  let g:EasyMotion_smartcase = 1

  let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 'junegunn/vader.vim'

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
  nnoremap <silent> <C-s> :<C-u>Ack!<Space>

  let g:ackprg = 'ag --nogroup --nocolor --column'
  let g:ack_autoclose = 1
'''

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'bfredl/nvim-miniyank'
hook_add = '''
  map p <Plug>(miniyank-autoput)
  map P <Plug>(miniyank-autoPut)
  map <C-n> <Plug>(miniyank-cycle)
'''
