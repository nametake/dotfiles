# Unite {{{
[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_add = '''
  source ~/.vim/rc/plugins/unite.rc.vim
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_event = ['BufEnter']

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_add = '''
  nnoremap <silent> <Space>f :<C-u>VimFiler -invisible<CR>
  nnoremap <silent> <Space>1 :<C-u>VimFiler -split -simple -winwidth=30 -no-quit<CR>
'''

[[plugins]]
repo = 'Shougo/unite-outline'
depends = 'unite.vim'

#}}}

# Auto complete {{{
[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = ['context_filetype.vim', 'vim-smartinput']
if = "has('lua')"
on_event = 'InsertEnter'
hook_add = '''
  source ~/.vim/rc/plugins/neocomplete.rc.vim
'''
hook_post_source = '''
  call neocomplete#custom#source('tag', 'disabled_filetypes', {'_' : 1})
  " call neocomplete#custom#source('buffer', 'disabled_filetypes', {'_' : 1})
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_add = '''
  source ~/.vim/rc/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_add = '''
  source ~/.vim/rc/plugins/neosnippet.rc.vim
'''
#}}}

[[plugins]]
repo = 'Konfekt/FastFold'
on_event = ['BufEnter']
hook_post_source = 'FastFoldUpdate'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'
on_event = ['BufEnter']

[[plugins]]
repo = 'scrooloose/syntastic'
on_event = ['BufEnter']
hook_add = '''
  source ~/.vim/rc/plugins/syntastic.rc.vim
'''
hook_post_source = '''
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*
'''

[[plugins]]
repo = 'lambdalisue/vim-gista'
on_cmd = ['Gista']
hook_add = '''
  let g:gista#client#default_username = 'nametake'
  nnoremap <silent> <Space>gl :<C-u>Gista list --no-cache<CR>
  nnoremap <silent> <Space>gp :<C-u>Gista post<CR>
'''

# Filetype {{{

# Python {{{
[[plugins]]
repo = 'davidhalter/jedi-vim'
if = '!has("neovim")'
on_ft = ['python']
hook_add = '''
  let g:jedi#completions_enabled = 1
  let g:jedi#auto_vim_configuration = 0
  let g:jedi#smart_auto_mappings = 0
  let g:jedi#show_call_signatures = 0
'''
hook_source = '''
  setlocal completeopt-=preview
'''

[[plugins]]
repo =  'hynek/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
on_ft = ['python']

[[plugins]]
repo = 'hdima/python-syntax'
on_ft = ['python']
hook_add = '''
  let python_highlight_all = 1
'''

[[plugins]]
repo = 'tmhedberg/SimpylFold'
on_ft = ['python']
#}}}

# Golang {{{
[[plugins]]
repo = 'vim-jp/vim-go-extra'
on_ft = ['go']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_structs = 1
  let g:go_highlight_types = 1
  let g:go_highlight_interfaces = 1
  let g:go_highlight_operators = 1
  let g:go_highlight_build_constraints = 1

  let g:go_fmt_fail_silently = 0
  let g:go_fmt_autosave = 0
  let g:go_fmt_command = "goimports"
  let g:go_term_mode = "split"
'''

[[plugins]]
repo = 'zchee/vim-goiferr'
on_ft = ['go']

[[plugins]]
repo = 'dgryski/vim-godef'
on_ft = ['go']

[[plugins]]
repo = 'jstemmer/gotags'
on_ft = ['go']

[[plugins]]
repo = 'nsf/gocode'
on_ft = ['go']

[[plugins]]
repo = 'rhysd/unite-go-import.vim'
depends = 'unite.vim'
on_ft = ['go']
hook_add = '''
  nnoremap gi :<C-u>Unite go/import<CR>
'''
#}}}

# Markdown {{{
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_add ='''
  let g:vim_markdown_conceal = 0
  let g:vim_markdown_new_list_item_indent = 2
  let g:vim_markdown_toc_autofit = 1
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown']
hook_add ='''
  let g:markdown_fold_style = 'nested'
'''

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown']
hook_add ='''
  let g:previm_show_header = 0
'''
#}}}

# JavaScript {{{
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'jiangmiao/simple-javascript-indenter'
on_ft = ['javascript']

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript']

[[plugins]]
repo = 'pmsorhaindo/syntastic-local-eslint.vim'
on_ft = ['javascript']
#}}}

# HTML/CSS {{{
[[plugins]]
repo = 'vim-scripts/html-improved-indentation'
on_ft = ['html', 'css']

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['html', 'css']
#}}}

# CoffeeScript {{{
[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = ['coffee']
#}}}

# json {{{
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''
#}}}

# TOML {{{
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']
#}}}

#}}}
