extends typescript

snippet component-template "React component template" b
type ${1}Props = {${2}}

export const $1 = function $1({${3}}: $1Props): JSX.Element {
  return ${4:<div>template</div>};
}${0}
endsnippet

snippet storybook-template "Storybook template" b
export const ${1} = Template.bind({});
$1.args = {$0};
endsnippet

snippet init-component-template "Initial react component template" b
import React from 'react';

type ${1}Props = {
  text?: string;
};

export const $1 = function $1({ text }: $1Props): JSX.Element {
  return <div>{text}</div>;
}
endsnippet

snippet init-storybook-template "Initial storybook template" b
/* eslint-disable import/no-extraneous-dependencies */
import React from 'react';

import { ComponentMeta, ComponentStory } from '@storybook/react';
/* eslint-enable */

import { ${1} } from './index';

// eslint-disable-next-line import/no-default-export
export default {
  title: '${2}',
  component: $1,
} as ComponentMeta<typeof $1>;

/* eslint-disable react/jsx-props-no-spreading */
const Template: ComponentStory<typeof $1> = function Template(args) {
  return <$1 {...args} />;
}
/* eslint-enable */

export const Default = Template.bind({});
Default.args = {${0}};
endsnippet
